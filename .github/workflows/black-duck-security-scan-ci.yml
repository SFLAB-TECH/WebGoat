# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Black Duck Security Action allows you to integrate Static Analysis Security Testing (SAST) and Software Composition Analysis (SCA) into your CI/CD pipelines.
# For more information about configuring your workflow,
# read our documentation at https://github.com/blackduck-inc/black-duck-security-scan
name: Black Duck Security Scan
on:
  push:
    branches: [main, master, develop, stage, release]
  pull_request:
    branches: [main, master, develop, stage, release]
  workflow_dispatch:
  
env:
  GIT_ACCESS_TOKEN: ${{ secrets.BOT_SECRET_KEY }}
jobs:
  blackduck-scan:
    runs-on: ubuntu-22.04 #포트포워딩으로 Black Duck 서버를 사용할 경우
    steps:
      - uses: actions/checkout@v4
      - run: git config --global url.https://$GIT_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
    
      - name: Black Duck SCA Scan
        id: black-duck-scan
        uses: blackduck-inc/black-duck-security-scan@v2

        with:
          include_diagnostics: true
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          detect_search_depth: 10
          blackducksca_prcomment_enabled: true
          blackducksca_fixpr_enabled: true
          github_token: ${{ secrets.SFLAB-TOKEN }}
          blackducksca_waitForScan: true
          mark_build_status: failure
          detect_args: |
            --detect.blackduck.scan.mode=RAPID
            --detect.excluded.detector.types=GIT
            --detect.project.name=Webgoat
            --detect.project.version.name=PR_Test
            --blackduck.trust.cert=true
            --detect.accuracy.required=NONE
            --detect.timeout=5000
#TEST
#--detect.blackduck.rapid.compare.mode=BOM_COMPARE_STRICT
#--detect.policy.check.fail.on.severities=CRITICAL
