# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Black Duck Security Action allows you to integrate Static Analysis Security Testing (SAST) and Software Composition Analysis (SCA) into your CI/CD pipelines.
# For more information about configuring your workflow,
# read our documentation at https://github.com/blackduck-inc/black-duck-security-scan
name: Black Duck Security Scan
on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  
# env:
#   GIT_ACCESS_TOKEN: ${{ secrets.BOT_SECRET_KEY }}
jobs:
  blackduck-scan:
    runs-on: ubuntu-latest #포트포워딩으로 Black Duck 서버를 사용할 경우
    steps:
      - uses: actions/checkout@v4
      # - run: git config --global url.https://$GIT_ACCESS_TOKEN@github.com/.insteadOf https://github.com/ 
      - name: Black Duck SCA Scan
        id: black-duck-scan
        uses: blackduck-inc/black-duck-security-scan@v2
        with:
          blackducksca_scan_full: false
          # include_diagnostics: true
          blackducksca_url: ${{ vars.BLACKDUCKSCA_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCKSCA_TOKEN }}
          #blackducksca_prComment_enabled: true
          blackducksca_fixpr_enabled: true
          github_token: ${{ secrets.GH_TOKEN }}
          blackducksca_waitForScan: true
          #mark_build_status: failure
          detect_args: |
            --blackduck.trust.cert=true
            --detect.project.name=Webgoat
            --detect.project.version.name=PR_Test
#TEST
#--detect.excluded.detector.types=GIT
#--detect.blackduck.rapid.compare.mode=BOM_COMPARE_STRICT
#--detect.policy.check.fail.on.severities=CRITICAL
